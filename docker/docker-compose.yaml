services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"    
      - "15672:15672"   
    networks:
      - climatehub-network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
      - climatehub-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  service-discovery:
    build:
      context: ../meli-climatehub-backend/climatehub-service-discovery
      dockerfile: Dockerfile
    ports:
      - "8761:8761"
    depends_on:
      rabbitmq:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:8761/eureka/apps"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s
    networks:
      - climatehub-network

  user-service:
    build:
      context: ../meli-climatehub-backend/climatehub-ms-user
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://service-discovery:8761/eureka/
      - SPRING_DATASOURCE_URL=jdbc:h2:mem:userdb
      - SPRING_DATASOURCE_DRIVERCLASSNAME=org.h2.Driver
      - SPRING_DATASOURCE_USERNAME=sa
      - SPRING_DATASOURCE_PASSWORD=
      - SPRING_PROFILES_ACTIVE=docker
      - APP_PORT=8082
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      service-discovery:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: on-failure
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:8082/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 60s
    networks:
      - climatehub-network

  notification-service:
    build:
      context: ../meli-climatehub-backend/climatehub-ms-notification
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    environment:
      - RABBITMQ_HOST=rabbitmq  
      - RABBITMQ_PORT=5672
      - RABBITMQ_USERNAME=guest
      - RABBITMQ_PASSWORD=guest
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://service-discovery:8761/eureka/
      - SPRING_DATASOURCE_URL=jdbc:h2:mem:notificationdb
      - SPRING_DATASOURCE_DRIVERCLASSNAME=org.h2.Driver
      - SPRING_DATASOURCE_USERNAME=sa
      - SPRING_DATASOURCE_PASSWORD=
      - SPRING_PROFILES_ACTIVE=docker
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - APP_PORT=8081
    depends_on:
      service-discovery:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    restart: on-failure
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:8081/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 60s
    networks:
      - climatehub-network
      
  ms-notification-worker:
    build:
      context: ../meli-climatehub-backend/climatehub-ms-notification-worker
      dockerfile: Dockerfile
    ports:
      - "8083:8083"
    depends_on:
      service-discovery:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - climatehub-network
    environment:
      - RABBITMQ_HOST=rabbitmq  
      - RABBITMQ_PORT=5672
      - RABBITMQ_USERNAME=guest
      - RABBITMQ_PASSWORD=guest
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://service-discovery:8761/eureka/
      - SPRING_PROFILES_ACTIVE=docker
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - APP_PORT=8083
    restart: on-failure
    healthcheck:
      test: curl -f http://localhost:8083/actuator/health || exit 1
      interval: 30s
      timeout: 15s
      retries: 5
      start_period: 180s

  api-gateway:
    build:
      context: ../meli-climatehub-backend/climatehub-api-gateway
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://service-discovery:8761/eureka/
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      service-discovery:
        condition: service_healthy
      user-service:
        condition: service_healthy
      notification-service:
        condition: service_healthy
      ms-notification-worker:
        condition: service_healthy
    restart: on-failure
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:8080/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 60s
    networks:
      - climatehub-network

networks:
  climatehub-network:
